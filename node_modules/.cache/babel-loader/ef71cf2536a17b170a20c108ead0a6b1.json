{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useContext } from \"react\";\nimport { CartContext } from \"../../components/Cart/CartContextProvider\";\nexport const useCart = () => {\n  _s();\n\n  const {\n    cart,\n    addToCart,\n    removeFromCart\n  } = useContext(CartContext);\n  let bookmarks = localStorage.getItem('bookmarks');\n\n  if (bookmarks) {\n    bookmarks = JSON.parse(bookmarks);\n\n    if (!bookmarks.find(item => item.id === post.id)) {\n      localStorage.setItem('bookmarks', JSON.stringify([...bookmarks, post]));\n    }\n  } else {\n    localStorage.setItem('bookmarks', JSON.stringify([post]));\n    return {\n      cart,\n      addToCart,\n      removeFromCart\n    };\n  }\n};\n\n_s(useCart, \"QBVlIwNDiluEmsKhzpbGIuWYAjw=\");","map":{"version":3,"sources":["C:/Users/DmitryDima/Desktop/React-bookmarking-urls-master/React-bookmarking-urls-master/my-app/src/hooks/cart/useCart.js"],"names":["useContext","CartContext","useCart","cart","addToCart","removeFromCart","bookmarks","localStorage","getItem","JSON","parse","find","item","id","post","setItem","stringify"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,WAAT,QAA4B,2CAA5B;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAC3B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,SAAR;AAAmBC,IAAAA;AAAnB,MAAsCL,UAAU,CAACC,WAAD,CAAtD;AACA,MAAIK,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAhB;;AAEM,MAAGF,SAAH,EAAc;AACVA,IAAAA,SAAS,GAAGG,IAAI,CAACC,KAAL,CAAWJ,SAAX,CAAZ;;AACA,QAAI,CAACA,SAAS,CAACK,IAAV,CAAeC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYC,IAAI,CAACD,EAAxC,CAAL,EAAkD;AAC9CN,MAAAA,YAAY,CAACQ,OAAb,CAAqB,WAArB,EAAkCN,IAAI,CAACO,SAAL,CAAe,CAAC,GAAGV,SAAJ,EAAeQ,IAAf,CAAf,CAAlC;AACH;AACJ,GALD,MAKO;AACHP,IAAAA,YAAY,CAACQ,OAAb,CAAqB,WAArB,EAAkCN,IAAI,CAACO,SAAL,CAAe,CAACF,IAAD,CAAf,CAAlC;AAGV,WAAO;AACLX,MAAAA,IADK;AAELC,MAAAA,SAFK;AAGLC,MAAAA;AAHK,KAAP;AAKD;AACA,CAnBM;;GAAMH,O","sourcesContent":["import { useContext } from \"react\";\nimport { CartContext } from \"../../components/Cart/CartContextProvider\";\n\nexport const useCart = () => {\n  const { cart, addToCart, removeFromCart } = useContext(CartContext);\n  let bookmarks = localStorage.getItem('bookmarks')\n\n        if(bookmarks) {\n            bookmarks = JSON.parse(bookmarks);\n            if (!bookmarks.find(item => item.id === post.id)) {\n                localStorage.setItem('bookmarks', JSON.stringify([...bookmarks, post]));\n            }\n        } else {\n            localStorage.setItem('bookmarks', JSON.stringify([post]));\n\n  \n  return {\n    cart,\n    addToCart,\n    removeFromCart,\n  };\n}\n};\n"]},"metadata":{},"sourceType":"module"}