{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DmitryDima\\\\Desktop\\\\novosti\\\\my-app\\\\src\\\\components\\\\Cart\\\\CartContextProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/React.createContext({});\nexport default function CartContextProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [cart, setCart] = useState([]);\n\n  const addToCart = product => {\n    setCart([...cart, product]);\n  };\n\n  localStorage.setItem(\"bookmarks\", JSON.stringify(cart));\n  var data = {\n    bookmarks: []\n  };\n  var stored = localStorage.getItem('bookmarks');\n\n  const removeFromCart = product => {\n    const temp = [...cart];\n    const index = temp.findIndex(cp => cp.id === product.id);\n    temp.splice(index, 3);\n    setCart(temp);\n  };\n\n  const PlusFromCart = product => {\n    setCart([...cart, product]);\n  };\n\n  if (stored) data = JSON.parse(stored);\n  let Radio = localStorage.getItem('Radio');\n\n  if (Radio) {\n    let inp = document.querySelector('input[name=\"hero\"][value=\"' + Radio + '\"]');\n\n    if (inp) {\n      inp.checked = true;\n    }\n\n    const values = {\n      addToCart,\n      cart,\n      data,\n      removeFromCart,\n      PlusFromCart\n    };\n    return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n      value: values,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 10\n    }, this);\n  }\n}\n\n_s(CartContextProvider, \"ZqFaEIYkzI5UoYUmTgmqHbYYm/0=\");\n\n_c = CartContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartContextProvider\");","map":{"version":3,"sources":["C:/Users/DmitryDima/Desktop/novosti/my-app/src/components/Cart/CartContextProvider.js"],"names":["React","useState","CartContext","createContext","CartContextProvider","children","cart","setCart","addToCart","product","localStorage","setItem","JSON","stringify","data","bookmarks","stored","getItem","removeFromCart","temp","index","findIndex","cp","id","splice","PlusFromCart","parse","Radio","inp","document","querySelector","checked","values"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,OAAO,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,CAAoB,EAApB,CAApB;AAEP,eAAe,SAASC,mBAAT,OAA2C;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AACxD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMO,SAAS,GAAIC,OAAD,IAAa;AAC7BF,IAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAUG,OAAV,CAAD,CAAP;AACD,GAFD;;AAIAC,EAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeP,IAAf,CAAjC;AAGA,MAAIQ,IAAI,GAAG;AAACC,IAAAA,SAAS,EAAC;AAAX,GAAX;AACF,MAAIC,MAAM,GAAGN,YAAY,CAACO,OAAb,CAAqB,WAArB,CAAb;;AAGE,QAAMC,cAAc,GAAIT,OAAD,IAAa;AAClC,UAAMU,IAAI,GAAG,CAAC,GAAGb,IAAJ,CAAb;AACA,UAAMc,KAAK,GAAGD,IAAI,CAACE,SAAL,CAAgBC,EAAD,IAAQA,EAAE,CAACC,EAAH,KAAUd,OAAO,CAACc,EAAzC,CAAd;AACAJ,IAAAA,IAAI,CAACK,MAAL,CAAYJ,KAAZ,EAAmB,CAAnB;AACAb,IAAAA,OAAO,CAACY,IAAD,CAAP;AACD,GALD;;AAQA,QAAMM,YAAY,GAAIhB,OAAD,IAAa;AAChCF,IAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAUG,OAAV,CAAD,CAAP;AACD,GAFD;;AAGA,MAAIO,MAAJ,EACAF,IAAI,GAAGF,IAAI,CAACc,KAAL,CAAWV,MAAX,CAAP;AAEA,MAAIW,KAAK,GAAGjB,YAAY,CAACO,OAAb,CAAqB,OAArB,CAAZ;;AACF,MAAIU,KAAJ,EAAW;AACT,QAAIC,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuB,+BAA+BH,KAA/B,GAAuC,IAA9D,CAAV;;AACA,QAAIC,GAAJ,EAAS;AACPA,MAAAA,GAAG,CAACG,OAAJ,GAAc,IAAd;AACH;;AACC,UAAMC,MAAM,GAAG;AAEbxB,MAAAA,SAFa;AAGbF,MAAAA,IAHa;AAIbQ,MAAAA,IAJa;AAKbI,MAAAA,cALa;AAMbO,MAAAA;AANa,KAAf;AAUA,wBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAEO,MAA7B;AAAA,gBAAsC3B;AAAtC;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;AACA;;GA9CuBD,mB;;KAAAA,mB","sourcesContent":["import React, { useState } from \"react\";\n\nexport const CartContext = React.createContext({});\n\nexport default function CartContextProvider({ children }) {\n  const [cart, setCart] = useState([]);\n\n  const addToCart = (product) => {\n    setCart([...cart, product]);\n  }\n  \n  localStorage.setItem(\"bookmarks\",JSON.stringify(cart));\n\n\n  var data = {bookmarks:[]};\nvar stored = localStorage.getItem('bookmarks');\n\n  \n  const removeFromCart = (product) => {\n    const temp = [...cart];\n    const index = temp.findIndex((cp) => cp.id === product.id);\n    temp.splice(index, 3);\n    setCart(temp);\n  };\n\n\n  const PlusFromCart = (product) => {\n    setCart([...cart, product]);\n  };\n  if (stored)\n  data = JSON.parse(stored);\n\n  let Radio = localStorage.getItem('Radio');\nif (Radio) {\n  let inp = document.querySelector('input[name=\"hero\"][value=\"' + Radio + '\"]');\n  if (inp) {\n    inp.checked = true;\n}\n  const values = {\n    \n    addToCart,\n    cart,\n    data,\n    removeFromCart,\n    PlusFromCart\n\n  };\n\n  return <CartContext.Provider value={values}>{children}</CartContext.Provider>;\n}\n}\n"]},"metadata":{},"sourceType":"module"}