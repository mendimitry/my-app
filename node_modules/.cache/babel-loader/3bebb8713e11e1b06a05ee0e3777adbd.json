{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useContext, useState, useEffect } from \"react\";\nimport { CartContext } from \"../../components/Cart/CartContextProvider\";\nexport const useCart = () => {\n  _s();\n\n  const {\n    cart,\n    addToCart,\n    removeFromCart\n  } = useContext(CartContext);\n  localStorage.setItem(\"bookmarks\", JSON.stringify(cart));\n  var arr = JSON.parse(localStorage.getItem(\"bookmarks\"));\n\n  if (bookmarks === [] || !bookmarks.find(item => item.id === cart.id) ? true : false) {\n    bookmarks.push(cart);\n    localStorage.setItem('bookmarks', JSON.stringify(bookmarks));\n  }\n\n  return {\n    cart,\n    addToCart,\n    removeFromCart\n  };\n};\n\n_s(useCart, \"QBVlIwNDiluEmsKhzpbGIuWYAjw=\");","map":{"version":3,"sources":["C:/Users/DmitryDima/Desktop/React-bookmarking-urls-master/React-bookmarking-urls-master/my-app/src/hooks/cart/useCart.js"],"names":["useContext","useState","useEffect","CartContext","useCart","cart","addToCart","removeFromCart","localStorage","setItem","JSON","stringify","arr","parse","getItem","bookmarks","find","item","id","push"],"mappings":";;AAAA,SAASA,UAAT,EAAoBC,QAApB,EAA6BC,SAA7B,QAA6C,OAA7C;AACA,SAASC,WAAT,QAA4B,2CAA5B;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAE3B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,SAAR;AAAmBC,IAAAA;AAAnB,MAAsCP,UAAU,CAACG,WAAD,CAAtD;AAEAK,EAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAAjC;AACA,MAAIO,GAAG,GAAGF,IAAI,CAACG,KAAL,CAAWL,YAAY,CAACM,OAAb,CAAqB,WAArB,CAAX,CAAV;;AAGA,MAAGC,SAAS,KAAK,EAAd,IAAoB,CAACA,SAAS,CAACC,IAAV,CAAeC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYb,IAAI,CAACa,EAAxC,CAArB,GAAmE,IAAnE,GAA0E,KAA7E,EAAoF;AAC/EH,IAAAA,SAAS,CAACI,IAAV,CAAed,IAAf;AACDG,IAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAeI,SAAf,CAAlC;AACF;;AAGF,SAAO;AACLV,IAAAA,IADK;AAELC,IAAAA,SAFK;AAGLC,IAAAA;AAHK,GAAP;AAOD,CArBM;;GAAMH,O","sourcesContent":["import { useContext,useState,useEffect} from \"react\";\nimport { CartContext } from \"../../components/Cart/CartContextProvider\";\n\nexport const useCart = () => {\n\n  const { cart, addToCart, removeFromCart } = useContext(CartContext);\n  \n  localStorage.setItem(\"bookmarks\",JSON.stringify(cart));\n  var arr = JSON.parse(localStorage.getItem(\"bookmarks\"));\n\n  \n  if(bookmarks === [] || !bookmarks.find(item => item.id === cart.id) ? true : false ){\n       bookmarks.push(cart)\n      localStorage.setItem('bookmarks', JSON.stringify(bookmarks));\n   }\n  \n  \n  return {\n    cart,\n    addToCart,\n    removeFromCart,\n\n    \n  };\n};\n"]},"metadata":{},"sourceType":"module"}